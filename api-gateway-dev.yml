server:
  port: 8081

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

zuul:
  routes:
    jwtauth:
      path: /oauth/**
      strip-prefix: false
      sensitive-headers: # Cookie,Set-Cookie,Authorization
      # https://supawer0728.github.io/2018/03/11/Spring-Cloud-Zuul/

      # 동일한 시스템 내에서 공유되는 요청 헤더를 외부(downstream)로 노출하지 않아야하는 경우가 있을 수 있다
      # sensitiveHeaders를 설정하여 내부에서 사용되는 헤더값이 노출되는 것을 막을 수 있다

      # zuul.routes.<serviceId>.stripPrefix: false인 경우 uri를 모두 보내며(/api/members/1), true인 경우에는 matching된 값을 제외하고 보낸다(/1)
    user:
      path: /account/**
      strip-prefix: false
    client:
      path: /client/**
      strip-prefix: false
  ignored-patterns: /auth/**

spring:
  application:
    name: api-gateway

logging:
  level:
    org:
      springframework:
        security: DEBUG
        boot: DEBUG
        web: DEBUG
      hibernate: DEBUG

#spring.security:
#  oauth2.client:
#    registration.api:
#      client-id: api
#      client-secret: apipassword
#      client-name: api
#      scope: read
#      authorization-grant-type: password
#      redirect-uri-template:
#      provider: jwtauth
#    provider.jwtauth:
#      token-uri: http://localhost:8080/oauth/token
#      authorization-uri: http://localhost:8080/oauth/authorize
